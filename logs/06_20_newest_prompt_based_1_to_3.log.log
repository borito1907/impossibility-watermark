2024-06-20 15:30:52,658:INFO:Running command: python watermarked_text_generator.py ++prompt_file='./inputs/tests_v1_with_lotr.csv' ++prompt_num=1 ++is_completion=False ++generator_args.temperature=1 ++generator_args.diversity_penalty=0 ++generation_stats_file_path='./inputs/newest_prompt_based_saves/prompt_1_temp_100_divp_0_attempt_1/stats.csv' ++watermark_args.use_fine_tuned=False ++watermarked_text_file_name='newest_prompt_based_saves/prompt_1_temp_100_divp_0_attempt_1/watermarked_text.csv' 
2024-06-20 15:30:52,658:INFO:Saving results to ./inputs/newest_prompt_based_saves/prompt_1_temp_100_divp_0_attempt_1/logfile.log
Traceback (most recent call last):
  File "/local1/borito1907/anaconda3/envs/watermark/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/local1/borito1907/anaconda3/envs/watermark/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/local1/borito1907/impossibility-watermark/generate_bulk.py", line 95, in <module>
    main()
  File "/local1/borito1907/impossibility-watermark/generate_bulk.py", line 85, in main
    stdout, stderr = run_command(command, log_filepath)
  File "/local1/borito1907/impossibility-watermark/generate_bulk.py", line 17, in run_command
    _ = subprocess.run(command, shell=True, check=True, text=True, stdout=f, stderr=subprocess.STDOUT)
  File "/local1/borito1907/anaconda3/envs/watermark/lib/python3.10/subprocess.py", line 505, in run
    stdout, stderr = process.communicate(input, timeout=timeout)
  File "/local1/borito1907/anaconda3/envs/watermark/lib/python3.10/subprocess.py", line 1146, in communicate
    self.wait()
  File "/local1/borito1907/anaconda3/envs/watermark/lib/python3.10/subprocess.py", line 1209, in wait
    return self._wait(timeout=timeout)
  File "/local1/borito1907/anaconda3/envs/watermark/lib/python3.10/subprocess.py", line 1959, in _wait
    (pid, sts) = self._try_wait(0)
  File "/local1/borito1907/anaconda3/envs/watermark/lib/python3.10/subprocess.py", line 1917, in _try_wait
    (pid, sts) = os.waitpid(self.pid, wait_flags)
KeyboardInterrupt
