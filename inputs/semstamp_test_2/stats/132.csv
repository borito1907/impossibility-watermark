total_sentences,candidate_text,passed_margin_test,candidate_text_lsh,accept_mask,one_sentence,current_num_tries
1,"

In GitHub Actions, to call another workflow from your current one,able workflow, you can use the `workflow_dispatch` action or the `repository_dispatch` event.

",True,7,"0,3",True,1
2,"

In GitHub Actions, to call another workflow from your current workflow, to achieve this, you need to use the `workflow_dispatch` and `workflow_call` actions.

",True,6,"0,3",True,2
3,"

In GitHub Actions, to call another workflow from your current one,ively known as ""workflow reuse"" or ""workflow composition"".",False,,,,3
4,"

In GitHub Actions, to call another workflow from your current workflow, to use the `workflow_dispatch` or `workflow_call` actions.

",True,6,"0,3",True,4
5,"

To call another workflow from your current workflow in GitHub Actions, to use the `workflow_dispatch` or `repository_dispatch` actions.

",True,6,"0,3",True,5
6,"

In GitHub Actions, to call another workflow from your current workflow, to do so you need to use the `workflow_dispatch` or `workflow_call` actions.

",True,6,"0,3",True,6
7,"

In GitHub Actions, to call another workflow from your current workflow, to accomplish that you should use the `workflow_dispatch` and `workflow_call` actions.

",True,6,"0,3",True,7
8,"

In GitHub Actions, to call another workflow from your first one,'t use `workflow_call` action.

",True,7,"0,3",True,8
9,"

In GitHub Actions, to call another workflow from your current workflow, to use the `workflow_dispatch` or `repository_dispatch` actions. 

",True,6,"0,3",True,9
10,"

In GitHub Actions, to call another workflow from your current workflow, to achieve this you will need the `workflow_dispatch` and `repository_token` which has been added as a built-in secret in GitHub.

",True,6,"0,3",True,10
11,"

In GitHub Actions, to call another workflow from your current one,?via the `workflow_dispatch` and `repository_dispatch` events.

",True,7,"0,3",True,11
12,"

In GitHub Actions, to call another workflow from your current workflow, to do this you would use the `workflow_dispatch` or `workflow_call` action.

",True,6,"0,3",True,12
13,"

In GitHub Actions, to call another workflow from your first one,'t just run the workflow like you would any other command, instead you need to use the `workflow_dispatch` or `repository_dispatch` event.

",True,7,"0,3",True,13
14,"

In GitHub Actions, to call another workflow from your current one,ably workflows.",True,7,"0,3",True,14
15,"

In GitHub Actions, to call another workflow from your current workflow, to achieve this, you can use the `workflow_dispatch` or `repository_dispatch` actions.

",True,6,"0,3",True,15
16,"

To call another workflow from your current GitHub Actions workflow, to use the `workflow_dispatch` or `workflow_call` actions.

",False,,,,16
17,"

In GitHub Actions, to call another workflow from your current workflow, to do this you should utilize the `workflow_dispatch` and `repository_dispatch` actions.

",True,6,"0,3",True,17
18,"

In GitHub Actions, to call another workflow from your current workflow, to reuse the functionality of multiple workflows and create more modular automation.

",True,2,"0,3",True,18
19,"

In GitHub Actions, to call another workflow from your current one,-to-one basis you can use the `workflow_dispatch` or `repository_dispatch` actions.

",True,6,"0,3",True,19
20,"

In GitHub Actions, to call another workflow from your current workflow, to utilize the `workflow_dispatch` and `repository_dispatch` events. 

",True,7,"0,3",True,20
21,"

In GitHub Actions, to call another workflow from your current one,led ""workflow dispatch"", you need to use the `workflow_dispatch` action.

",True,7,"0,3",True,21
22,"

To call another workflow from your current workflow in GitHub Actions, to use the `workflow_dispatch` or `workflow_call` actions.

",True,6,"0,3",True,22
23,"

In GitHub Actions, to call another workflow from your current one,ably is known as ""Reusing workflows"".",True,7,"0,3",True,23
24,"

In GitHub Actions, to call another workflow from your current one,able., you can use the `workflow_dispatch` or `repository_dispatch` actions.

",True,6,"0,3",True,24
25,"

To call another workflow from your first one in GitHub Actions, to achieve this, `workflow_call` action.

",True,7,"0,3",True,25
26,"

In GitHub Actions, to call another workflow from your current workflow, to achieve that you have to use `workflow_dispatch` or `repository_dispatch` event.

",True,6,"0,3",True,26
27,"

In GitHub Actions, to call another workflow from your first workflow, to trigger another workflow run, you can use the `workflow_dispatch` or `repository_dispatch` actions.

",True,6,"0,3",True,27
28,"

In GitHub Actions, to call another workflow from your current one,i.e., trigger one workflow from another, to achieve this, you can use the `workflow_dispatch` action.

",True,6,"0,3",True,28
29,"

In GitHub Actions, to call another workflow from your current workflow, to use the `workflow_dispatch` and `workflow_call` actions.

",True,6,"0,3",True,29
30,"

To call another workflow from your current GitHub Actions workflow, to use the `workflow_dispatch` or `repository_dispatch` event. 

",True,7,"0,3",True,30
31,"

In GitHub Actions, to call another workflow from your current workflow, to do this you need to use the `workflow_dispatch` or `repository_dispatch` actions. 

",True,6,"0,3",True,31
32,"

In GitHub Actions, to call another workflow from your current workflow, to use the `workflow_dispatch` or `workflow_call` actions.",True,6,"0,3",True,32
33,"

In GitHub Actions, to call another workflow from your current workflow, to trigger it manually, you need to use the `workflow_dispatch` event.

",True,6,"0,3",True,33
34,"

In GitHub Actions, to call another workflow from your current one, to reuse functionality or create a hierarchical workflow structure, you can use the `workflow_dispatch` and `workflow_call` actions.

",True,6,"0,3",True,34
35,"

To call another workflow from your current one in GitHub Actions, to achieve this, you can use the `workflow_dispatch` or `repository_dispatch` event.

",False,,,,35
36,"

In GitHub Actions, to call another workflow from your current one,ably use the `workflow_dispatch` and `repository_dispatch` triggers.

",False,,,,36
37,"

In GitHub Actions, to call another workflow from your first one,'t you need use the `workflow_dispatch` or `repository_dispatch` event.

",True,7,"0,3",True,37
38,"

In GitHub Actions, to call another workflow from your current one,ably, to another yout.",True,6,"0,3",True,38
39,"

In GitHub Actions, to call another workflow from your current workflow, to achieve this you'll need to use the `workflow_dispatch` or `repository_dispatch` actions.

",True,6,"0,3",True,39
40,"

In GitHub Actions, to call another workflow from your current one,led `workflow`, you can use the `workflow_dispatch` or `workflow_call` actions.

",True,7,"0,3",True,40
41,"

In GitHub Actions, to call another workflow from your current workflow, to use the `workflow_dispatch` or `workflow_call` actions.

",True,6,"0,3",True,41
42,"

In GitHub Actions, to call another workflow from your current workflow, you need to use the `workflow_dispatch` or `workflow_call` event.

",True,7,"0,3",True,42
43,"

In GitHub Actions, to call another workflow from your current workflow, to achieve this you use `workflow_dispatch` or `repository_dispatch`.

",True,6,"0,3",True,43
44,"

In GitHub Actions, to call another workflow from your first one,'t, you can use the `workflow_dispatch` action or `workflow_call` action.

",True,6,"0,3",True,44
45,"

In GitHub Actions, to call another workflow from your current workflow, to achieve that you need to use the `workflow_dispatch` and `workflow_call` actions.

",True,6,"0,3",True,45
46,"

In GitHub Actions, to call another workflow from your current workflow, to perform specific task.",True,6,"0,3",True,46
47,"

In GitHub Actions, to call another workflow from your current workflow, to do that, you'll use an `workflow_dispatch` or `workflow_call` action.

",True,6,"0,3",True,47
48,"

In GitHub Actions, to call another workflow from your current workflow, to use the `workflow_dispatch` or `workflow_call` actions.

",True,6,"0,3",True,48
49,"

In GitHub Actions, to call another workflow from your current workflow, to use `workflow_dispatch` or `repository_dispatch` events.

",True,7,"0,3",True,49
50,"

In GitHub Actions, to call another workflow from your first one,'t require any specific syntax or keyword.",True,7,"0,3",True,50
51," Instead, to achieve this you'll use the `workflow_dispatch` action.

",True,5,"6,3",True,1
52," Instead,'t use the `workflow_dispatch` and `workflow_call` actions provided by GitHub.

",True,5,"6,3",True,2
53," You can use the `workflow_dispatch` action to trigger another workflow.

",True,5,"6,3",True,3
54," Instead, to call another workflow you have to trigger it using the `workflow_dispatch` event.

",True,5,"6,3",True,4
55," Instead, to invoke another workflow you will use the `workflow_dispatch` action.

",True,5,"6,3",True,5
56," Here are the two ways you can achieve this:

**Method 1: Using `workflow_dispatch`**
You can use the `workflow_dispatch` action to trigger another workflow file.",True,7,"6,3",True,6
57," Instead, to leverage the `workflow_dispatch` and `repository_dispatch` events.

",True,5,"6,3",True,7
58," You can simply use the `workflow_dispatch` action.

",True,5,"6,3",True,8
59," Instead, to achieve this you can use the `workflow_dispatch` and `workflow_call` features.

",True,5,"6,3",True,9
60," You can use the `workflow_dispatch` and `repository_dispatch` events.

",True,5,"6,3",True,10
61," Instead,'ll use the `workflow_dispatch` and `repo's GitHub Token`.

",True,5,"6,3",True,11
62," You can simply use the `workflow_dispatch` action to trigger another workflow.

",True,5,"6,3",True,12
63," Instead, you can use the `workflow_dispatch` action provided by GitHub.

",True,5,"6,3",True,13
64," Instead, to trigger one workflow from another, to use the `workflow_dispatch` or `repository_dispatch` events.

",True,7,"6,3",True,14
65," Instead,ou simply need to use the `workflow_dispatch` action.

",True,5,"6,3",True,15
66," Instead, to reuse workflows, to make them more modular you could leverage the `workflow_dispatch` and `workflow_call` features.

",True,0,"6,3",True,16
67," Instead, to call other workflows, it uses the `workflow_dispatch` and `repository_dispatch` events.

",False,,,,17
68," You can achieve this using the `workflow_dispatch` and `repositoryDispatch` actions.

",True,6,"6,3",True,18
69,"Here's an example of how you can do it:

**Calling a workflow from another workflow using `workflow_dispatch`:**
```yaml

name: Call Another Workflow

on:
  workflow_dispatch:
    inputs:
      repo-token:
        description: 'Repo token'
        required: true

jobs:
  call-another-workflow:
    runs-on: ubuntu-latest

    steps:
      - name: Call another workflow 
        uses: actions/workflow-dispatch@v1  
          with:            
            github_token: ${{ inputs.repo-token }}
            workflow: Another Workflow 
            ref: main 
```

In this example, the `actions/workflow-dispatch` action is used to dispatch (call) another workflow named ""Another Workflow"" on the same repository.

",True,7,"0,3",True,1
70,"Here's an example:

Let's say you have two workflows: `main.workflow.yml` and `dependent.workflow.yml`.",True,3,"0,3",True,2
71," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,1
72," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,2
73," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,3
74," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,4
75," 

In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`. 

",True,1,"6,0",True,5
76," 

To call `dependent.workflow.yml` from `main.workflow.yml`, use the following code in `main.workflow.yml`:
```yaml 
name: Main Workflow 
on:
  push:
    branches:
      - main 
jobs:
  call-dependent-workflow:
    runs-on: ubuntu-latest 
    steps:
      - name: Call dependent workflow 
        uses: actions/repository-dispatch/v1 
        with: 
          repository: $GITHUB_REPOSITORY 
          ref: $GITHUB_REF 
          workflow: dependent.workflow.yml 
```
This will trigger the `dependent.workflow.yml` when `main.workflow.yml` runs.

",True,7,"6,0",True,6
77," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,7
78," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,8
79," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,9
80," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,10
81," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,11
82," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,12
83," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,13
84," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,14
85," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,15
86," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,16
87," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,17
88," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,18
89," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,19
90," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,20
91," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,21
92," In your `main.workflow.yml`, you want to trigger the `dependent.workflow.yml` workflow.

",True,1,"6,0",True,22
93," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,23
94," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,24
95," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,25
96," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,26
97," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,27
98," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,28
99," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,29
100," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,30
101," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,31
102," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,32
103," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,33
104," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,34
105," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,35
106," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,36
107," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,37
108," 

1. In your `main.workflow.yml`, you would use the `repositoryDispatch` action to trigger the `dependent.workflow.yml`.

",True,7,"6,0",True,38
109," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,39
110," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,40
111," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,41
112," In your `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,42
113," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,43
114," You want to trigger `dependent.workflow.yml` from within `main.workflow.yml`.

",True,1,"6,0",True,44
115," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,45
116," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,46
117," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,47
118," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,48
119," In `main.workflow.yml`, you want to trigger `dependent.workflow.yml`.

",True,1,"6,0",True,49
120," You want to trigger `dependent.workflow.yml` from `main.workflow.yml`.

",True,1,"6,0",True,50
121,"In `main.workflow.yml`, add a step that uses the `workflow_dispatch` action:
```yaml=
name: Main Workflow

on:
  push:
    branches:
      - main

jobs:
  build-and-trigger-dependent:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger dependent workflow 
        uses: actions/workflow_dispatch@v1 
        with: 
          repository: $GITHUB_REPOSITORY 
          workflow: dependent.workflow.yml 
          ref: $GITHUB_SHA 
```

This will trigger the `dependent.workflow.yml` with the same Git commit SHA as the original workflow.

",False,,,,1
122,"**Step 1:** In `dependent.workflow.yml`, add a `workflow_dispatch` event at the top:
```yaml 
on:
  workflow_dispatch:
    inputs:
      some_input:
        description: 'Input for dependent workflow'
        required: true

```
This sets up the `dependent.workflow.yml` to be triggered by a dispatch event.

",True,1,"6,2",True,2
123,"**main.workflow.yml**
```yaml=
name: Main Workflow

on:
  push:
    branches:
      - main

jobs:
  run-dependent-workflow:
    runs-on: ubuntu-latest 
    steps:
      - name: Trigger dependent workflow 
        uses: actions/github-script@v6 
        with: 
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.issues.createComment({
              issue_number: 1,
              owner: ""${GITHUB_REPO_OWNER}"",
              repo: ""${GITHUB_REPO_NAME}"",
              body: ""Triggering dependent workflow""
            })

            github.actions.repository Dispatch({
              owner: ""${GITHUB_REPO_OWNER}"",
              repo: ""${GITHUB_REPO_NAME}"",
              event_type: ""dependent_workflow"",
              client_payload: {}
            })
```

**dependent.workflow.yml**
```yaml=
name: Dependent Workflow

on:
  repository_dispatch:
    types: [dependent_workflow]
    
jobs:
  do-something:
    runs-on: ubuntu-latest 
    steps:
      - run: echo ""This is the dependent workflow!""
",False,,,,3
124,"**Step 1: Update `dependent.workflow.yml`**

Add a `workflow_dispatch` event at the beginning of `dependent.workflow.yml`:
```yaml

on:
  workflow_dispatch:
    inputs:
      someInput:
        description: 'Some input'
        required: true

jobs:
  # Your job(s) here

```

**Step 2: Update `main.workflow.yml`**

Use the `repository_dispatch` action in `main.workflow.yml` to trigger `dependent.workflow.yml` with the desired inputs:
```yaml

jobs:
  trigger_dependent_workflow:
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger dependent workflow 
        uses: octokit/octokit-rest-webhooks@v1.0.0  
        env: 
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_OWNER: ${{ github.repository_owner }}
          REPO_NAME: ${{ github.repository_name }}        
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          owner: ${{ REPO_OWNER }}
          repo: ${{ REPO_NAME }}
          event-type: workflow_dispatch 
          request-payload: |
            {
              ""inputs"": {
                ""someInput"": ""value for some input""
              }
            }assistant

Note that the `octokit` action is used to send a repository dispatch event to trigger the `dependent.workflow.yml`.",True,4,"6,2",True,4
125,"**Step 1:** In `dependent.workflow.yml`, add a `on` section with a `repository_dispatch` event:
```yaml

name: Dependent Workflow

on:
  repository_dispatch:
    types: [call-dependent-workflow]
```
**Step 2:** In `main.workflow.yml`, use the `workflow_dispatch` action to trigger `dependent.workflow.yml`:
```yaml

name: Main Workflow

on:
  push:
    branches:
      - main

jobs:
  call-dependent-workflow:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger dependent workflow 
        uses:.actions/checkout@v3        
        - name: Call dependent workflow       
        uses:./.github/actions/workflow-dispatch@v1            
          env:                
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}            
            REPO_DISPATCH_EVENT: call-dependent-workflow            
            WORKFLOW_FILE:.github/workflows/dependent.workflow.yml            
            REF: ${{ github.event.pull_request.head.ref }}
```
In the above example:

* `REPO_DISPATCH_EVENT` specifies the event type (`call-dependent-workflow`) that will be triggered in `dependent.workflow.yml`.
",False,,,,5
126,"In your `main.workflow.yml`, add a step that uses the `repositoryDispatch` action:
```yaml

jobs:
  main-job:
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger dependent workflow 
        uses: actions/repository-dispatch@v1  
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          ref: ${{ github.event.pull_request.head.ref }}
          workflow: dependent.workflow.yml

```

When you run `main.workflow.yml`, it will dispatch the `dependent.workflow.yml` workflow.

",True,7,"6,2",True,6
127,"**main.workflow.yml**
```yaml 
on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest    
    steps:
      - name: Call dependent workflow      
        uses: repoOwner/repoName/.github/workflows/dependent.workflow.yml@refs/tags/v1        
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
```
In the above example, `.github/workflows/dependent.workflow.yml@refs/tags/v1` refers to the `dependent.workflow.yml` file located in the same repository.

",True,3,"6,2",True,7
128,"**Step 1:** In `dependent.workflow.yml`, add a `workflow_dispatch` trigger:
```yaml 
on:
  workflow_dispatch:
    inputs:
      myInput:
        description: 'My input'
        required: true    
```
This sets up `dependent.workflow.yml` to be triggered by a dispatch event.

",True,0,"6,2",True,8
129,"**main.workflow.yml**
```yaml

name: Main Workflow

on:
  push:
    branches:
      - main

jobs:
  trigger-dependent-workflow:
    runs-on: ubuntu-latest

    steps:
      - name: Trigger dependent workflow 
        uses: actions/repository-dispatch/v1 
        with: 
          token: ${{ secrets.GITHUB_TOKEN }} 
          repository: ${{ github.repository }} 
          ref: ${{ github.ref }} 
          workflow: 'dependent.workflow.yml' 
          inputs: {} 

```

In `main.workflow.yml`, we use the `actions/repository-dispatch/v1` action to dispatch a workflow run event to the `dependent.workflow.yml` workflow.",False,,,,9
130,"**main.workflow.yml**
```yaml=
name: Main Workflow

on:
  workflow_dispatch:
    inputs:
      dependentWorkflow: { description: 'Trigger Dependent Workflow' }

jobs:
  main-job:
    runs-on: ubuntu-latest
    
    steps:
      - name: Trigger Dependent Workflow 
        uses:./.github/repo-actions/trigger-dependent-workflow@v1 
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          repo_owner: ${{ github.repository_owner }}
          repo_name: ${{ github.repository_name }}
          workflow_id: dependent_workflow 
```

**dependent.workflow.yml**
```yaml=
name: Dependent Workflow 

on:
  repositoryDispatch:
    types: ['dependentWorkflow']

jobs:
  dependent-job:
    runs-on: ubuntu-latest

    # Your job steps here...
```
In the above example:

1.",True,6,"6,2",True,10
