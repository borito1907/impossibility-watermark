total_sentences,candidate_text,passed_margin_test,candidate_text_lsh,accept_mask,one_sentence,current_num_tries
1,"

In Python, the math.modf() function can be used to separate a floating-point number into its fractional and whole parts.

",False,,,,1
2,"

In Python, you can use the built-in `math.modf()` function or string manipulation to separate a floating-point number into its fractional and whole parts.

",True,6,"0,3",True,2
3,"

You can use the `math` module's `modf()` function or the `divmod()` function to separate a floating-point number into its fractional and whole parts in Python.

",True,2,"0,3",True,3
4,"

In Python, you can use the built-in `math.modf()` function to separate a floating-point number into its fractional and whole parts.

",False,,,,4
5,"

You can use the `math.modf()` function in Python, separate a floating point number into its fractional and whole parts.

",True,7,"0,3",True,5
6,"

In Python, a floating-point number can be separated into its fractional and whole parts using the `math.modf()` function or by simple arithmetic operations.

",True,2,"0,3",True,6
7,"

You can use the `math.modf()` function or the `divmod()` function in combination with the `float()` function to separate a floating-point number into its fractional and whole parts in Python.

",True,2,"0,3",True,7
8,"

In Python, a floating point number can be separated into its fractional and whole parts using the `math.modf()` function or by simply using the modulus operator (`%`).

",True,2,"0,3",True,8
9,"

You can use the `math` module's `modf()` function to separate a floating-point number into its fractional and whole parts in Python.

",True,6,"0,3",True,9
10,"

In Python, the `math.modf()` function can be used to separate a floating point number into its fractional and whole parts.

",True,6,"0,3",True,10
11,"

In Python, of course!

",True,2,"0,3",True,11
12,"

You can use the `math.modf()` function in Python to separate a floating-point number into its fractional and whole parts.

",True,6,"0,3",True,12
13,"

In Python, it can be done using the `math.modf()` function which returns two values: the fractional part and the whole part of the given float number.

",True,2,"0,3",True,13
14,"

A great question!

",True,3,"0,3",True,14
15,"In Python, you can use the `math.modf()` function or the `%` operator to separate a floating-point number into its fractional and whole parts.

",False,,,,1
16,"In Python, you can use the `math.modf()` function to separate a floating-point number into its fractional and whole parts.

",True,6,"6,0",True,2
17,"Here's an example:
```
import math

x = 12.75

whole_part, integer part) = int(x)
fractional_part (fractional part) = x - whole_part

print(""Whole part:"", whole_part)
print(""Fractional part:"", fractional_part)
```

This will output:
```
Whole part: 12 
Fractional part: 0.75 
```

Alternatively, you can use the `math.modf()` function, which returns a tuple containing the fractional and whole parts of a number:
```
import math

x = 12.75

fractional_part, whole_part = math.modf(x)

print(""Whole part:"", int(whole_part))
print(""Fractional part:"", fractional_part)
```

Both of these approaches will give you the desired result!assistant

To expand on this, if you want to get the fractional part as a string without the leading '0.'",False,,,,1
18,"Here's an example:
```python

import math

num = 12.56

whole_part, = math.floor(num)  # or int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)
print(""Fractional part:"", frac_part)

```

Output:

```
Whole part: 12

Fractional part: 0.56

```

Alternatively, you can use the `divmod()` function, which returns both the quotient (whole part) and the remainder (fractional part) of a division operation:
```python

num = 12.56

whole_part, frac_part = divmod(num, 1)

print(""Whole part:"", whole_part)
print(""Fractional part:"", frac_part)

```

Both methods will give you the desired result!

",True,6,"0,3",True,2
19,"Here's an example:
```
import math

num = 12.75

whole, frac = math.modf(num)

print(""Whole part:"", int(whole))  # prints: Whole part: 12 
print(""Fractional part:"", frac)  # prints: Fractional part: 0.75 
```
The `math.modf()` function returns a tuple containing the fractional and whole parts of the input number.",True,0,"0,3",True,3
20," The `int()` conversion is used to convert the whole part to an integer.

",False,,,,1
21," The whole part is returned as a float, so we convert it to an integer using `int()` for nicer output.

",True,3,"5,2",True,2
22," The whole part is returned as a float, so we convert it to an integer using the `int()` function if needed.

",True,3,"5,2",True,3
23," The whole part is returned as a float, so we convert it to an integer using the `int()` function.

",True,3,"5,2",True,4
24," The `int()` function is used to convert the whole part to an integer, since `modf()` returns it as a float.

",True,3,"5,2",True,5
25," The whole part is returned as a float, so we use `int()` to convert it to an integer if needed.

",True,3,"5,2",True,6
26," The whole part is returned as a float, so we convert it to an integer using the `int()` function.

",True,3,"5,2",True,7
27," The `int()` function is used to convert the whole part to an integer.

",True,1,"5,2",True,8
28," The whole part is returned as an integer, and the fractional part is returned as a float.

",True,6,"5,2",True,9
29," The whole part is returned as an integer, and the fractional part is returned as a float.

",True,6,"5,2",True,10
30," The `int()` function is used to convert the whole part to an integer.

",True,1,"5,2",True,11
31," The whole part is returned as an integer (you need to use `int()` to convert it), and the fractional part is returned as a float.

",True,2,"5,2",True,12
32,"Alternatively, you can use string manipulation to achieve the same result:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by converting the whole part to an integer using the `int()` function, and then subtracting that from the original number to get the fractional part.

",True,6,"5,2",True,1
33,"Alternatively, you can also use the `divmod()` function to achieve the same result:
```
num = 12.75

frac, whole = divmod(num, 1)

print(""Whole part:"", int(whole))  # prints: Whole part: 12 
print(""Fractional part:"", frac)  # prints: Fractional part: 0.75 
```
Note that `divmod()` returns a tuple with the remainder (fractional part) and quotient (whole part).

",True,6,"5,2",True,2
34,"Alternatively, you can use string manipulation to achieve the same result:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by converting the input number to an integer using `int()`, which truncates the decimal part, and then subtracting this integer from the original number to get the fractional part.

",True,6,"5,2",True,3
35,"Alternatively, you can also use string manipulation to achieve this:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This approach is simple but might be less efficient than using `math.modf()`.

",True,6,"5,2",True,4
36,"Alternatively, you can use the `%` operator to get the fractional part and then use the `int()` function to get the whole part:
```
num = 12.75

frac_part = num % 1  # gets the fractional part 
whole_part = int(num)  # gets the whole part 

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
Both approaches should work for your needs!assistant

Let me know if you have any other questions or if thereâ€™s anything else I can help you with.assistant

I'm here to assist you.",True,6,"5,2",True,5
37,"Alternatively, you can use the `divmod()` function to achieve the same result:
```
num = 12.75

frac, whole = divmod(num, 1)

print(""Whole part:"", int(whole))  # prints: Whole part: 12 
print(""Fractional part:"", frac)  # prints: Fractional part: 0.75 
```
Note that in this case, we're using the `divmod()` function with a divisor of 1, which effectively separates the whole and fractional parts of the input number.

",False,,,,6
38,"Alternatively, you can use string manipulation to achieve this.",True,5,"5,2",True,7
39," Here's an example:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by converting the input number to an integer using `int()`, which effectively truncates the decimal part.",True,2,"1,4",True,1
40," Here's an example:
```
num = 12.75

str_num = str(num)
parts = str_num.split('.')

",True,2,"1,4",True,2
41," Here's another approach:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by converting the input number to an integer using `int()`, which effectively truncates the decimal part.",True,6,"1,4",True,3
42," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by converting the original number to an integer using `int()`, which effectively truncates the decimal part.",True,6,"1,4",True,4
43," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This approach subtracts the whole part from the original number to get the fractional part.

",True,6,"1,4",True,5
44," Here's an example:
```
num = 12.75

str_num = str(num)
parts = str_num.split('.')

",True,2,"1,4",True,6
45," Here's another approach:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method uses basic arithmetic operations to extract the whole and fractional parts.

",True,6,"1,4",True,7
46," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This approach works by casting the float to an integer using `int()`, which effectively truncates the decimal part, leaving you with the whole part.",False,,,,8
47," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by converting the number to an integer using `int()`, which truncates the decimal part, and then subtracting that from the original number to get the fractional part.

",True,6,"1,4",True,9
48," Here's another way:
```
num = 12.75

whole_str, frac_str = str(num).split('.')

",False,,,,10
49," Here's another way:
```
num = 12.75

whole = int(num)
frac = num - whole

print(""Whole part:"", whole)  # prints: Whole part: 12 
print(""Fractional part:"", frac)  # prints: Fractional part: 0.75 
```
This method works by converting the input number to an integer using `int()`, which effectively rounds down to the nearest whole number.",True,2,"1,4",True,11
50," Here's an example:
```
num = 12.75

whole_part, frac_part = str(num).split('.')

",True,2,"1,4",True,12
51," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by converting the number to an integer using `int()`, which truncates the decimal part, and then subtracting the resulting whole part from the original number to get the fractional part.

",True,6,"1,4",True,13
52," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This approach uses simple arithmetic operations to extract the whole and fractional parts.

",True,6,"1,4",True,14
53," Here's an example:
```
num = 12.75

str_num = str(num)
parts = str_num.split('.')

",True,2,"1,4",True,15
54," Here's another approach:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by converting the input number to an integer using `int()`, which effectively truncates the decimal part.",True,6,"1,4",True,16
55," Here's an example:
```
num = 12.75

str_num = str(num)
parts = str_num.split('.')

",True,2,"1,4",True,17
56," Here's an example:
```
num = 12.75

str_num = str(num)
parts = str_num.split('.')

",True,2,"1,4",True,18
57," Here's another approach:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by simply subtracting the whole part (obtained using the `int()` function) from the original number to get the fractional part.

",True,6,"1,4",True,19
58," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This approach works by converting the number to an integer using `int()`, which effectively truncates the decimal part, and then subtracting that from the original number to get the fractional part.

",True,6,"1,4",True,20
59," Here's an example:
```
num = 12.75

str_num = str(num)
parts = str_num.split('.')

",True,2,"1,4",True,21
60," Here's another approach:
```
num = 12.75

str_num = str(num)
parts = str_num.split('.')

",True,3,"1,4",True,22
61," Here's another way:
```
num = 12.75

whole_str, frac_str = str(num).split('.')

",False,,,,23
62," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method involves converting the number to an integer using the `int()` function, which effectively truncates the decimal part.",True,6,"1,4",True,24
63," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by casting the number to an integer using `int()`, which effectively truncates the decimal part, giving you the whole part.",True,6,"1,4",True,25
64," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method involves converting the number to an integer using `int()`, which effectively truncates the decimal part, and then subtracting that from the original number to get the fractional part.

",True,6,"1,4",True,26
65," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by first converting the number to an integer using `int()`, which gives us the whole part.",True,6,"1,4",True,27
66," Here's an example:
```
num = 12.75

str_num = str(num)
parts = str_num.split('.')

",True,2,"1,4",True,28
67," Here's an example:
```
num = 12.75

str_num = str(num)
parts = str_num.split('.')

",True,2,"1,4",True,29
68," Here's another approach:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method uses basic arithmetic operations to extract the whole and fractional parts of the number.

",True,6,"1,4",True,30
69," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method uses simple arithmetic to extract the whole and fractional parts.",True,6,"1,4",True,31
70," Here's an example:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This approach is simpler, but less elegant than using `math.modf()`.assistant

To separate a floating-point number into its fractional and whole parts in Python, you can use the following methods:

Method 1: Using the `math.modf()` function:

```
import math

num = 12.75

whole, frac = math.modf(num)

print(""Whole part:"", int(whole))
print(""Fractional part:"", frac)
```

Method 2: Without using any libraries:

```
num = 12.75

whole_part = int(num)
frac_part = round(num - whole_part, 10)  # Round to 10 decimal places for accuracy

print(""Whole part:"", whole_part)
print(""Fractional part:"", frac_part)
```

Both methods will give you the same result.",True,6,"1,4",True,32
71," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by converting the input number to an integer using the `int()` function, which effectively truncates the decimal part.",True,6,"1,4",True,33
72," Here's another way:
```
num = 12.75

whole = int(num)
frac = num - whole

print(""Whole part:"", whole)  # prints: Whole part: 12 
print(""Fractional part:"", frac)  # prints: Fractional part: 0.75 
```
This approach uses simple arithmetic operations to extract the whole and fractional parts.

",True,6,"1,4",True,34
73," Here's an example:
```
num = 12.75

whole_str, frac_str = str(num).split('.')

",True,2,"1,4",True,35
74," Here's another way:
```
num = 12.75

whole = int(num)
frac = num - whole

print(""Whole part:"", whole)  # prints: Whole part: 12 
print(""Fractional part:"", frac)  # prints: Fractional part: 0.75 
```
This approach uses simple arithmetic to extract the whole and fractional parts by subtracting the whole part from the original number.

",True,6,"1,4",True,36
75," Here's an example:
```
num = 12.75

whole, frac = num.split('.')

",False,,,,37
76," Here's another approach:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by first converting the number to an integer using `int()`, which effectively truncates the decimal part.",True,6,"1,4",True,38
77," Here's an example:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by converting the number to an integer using `int()`, which effectively removes the fractional part, leaving you with the whole part.",True,6,"1,4",True,39
78," Here's another way:
```
num = 12.75

whole = int(num)
frac = num - whole

print(""Whole part:"", whole)  # prints: Whole part: 12 
print(""Fractional part:"", frac)  # prints: Fractional part: 0.75 
```
This method is simpler, but less elegant than using `math.modf()`.",True,6,"1,4",True,40
79," Here's an example:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method is simple and doesn't require importing any additional modules.",True,6,"1,4",True,41
80," Here's an example:
```
num = 12.75

str_num = str(num)
parts = str_num.split('.')

",True,2,"1,4",True,42
81," Here's another way:
```
num = 12.75

str_num = str(num)
parts = str_num.split('.')

",True,3,"1,4",True,43
82," Here's an example:
```
num = 12.75

str_num = str(num)
parts = str_num.split('.')

",True,2,"1,4",True,44
83," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This approach uses simple arithmetic to extract the whole and fractional parts.",True,6,"1,4",True,45
84," Here's another approach:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by converting the floating-point number to an integer using `int()`, which truncates the decimal part.",True,6,"1,4",True,46
85," Here's another way:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This method works by converting the input number to an integer using `int()`, which effectively truncates the decimal part.",True,6,"1,4",True,47
86," Here's an example:
```
num = 12.75

str_num = str(num)
whole, frac = str_num.split('.')

",True,2,"1,4",True,48
87," Here's an example:
```
num = 12.75

whole_part = int(num)
frac_part = num - whole_part

print(""Whole part:"", whole_part)  # prints: Whole part: 12 
print(""Fractional part:"", frac_part)  # prints: Fractional part: 0.75 
```
This approach works by converting the number to an integer using `int()`, which truncates the decimal part, and then subtracting that from the original number to get the fractional part.

",True,6,"1,4",True,49
88," Here's another way:
```
num = 12.75

whole = int(num)
frac = num - whole

print(""Whole part:"", whole)  # prints: Whole part: 12 
print(""Fractional part:"", frac)  # prints: Fractional part: 0.75 
```
This method works by converting the number to an integer using `int()`, which effectively truncates the decimal part.",True,2,"1,4",True,50
89," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,1
90," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,2
91," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,3
92," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,4
93," Then, you subtract the whole part from the original number to get the fractional part.

",True,7,"5,2",True,5
94," Then, you subtract the whole part from the original number to get the fractional part.

",True,7,"5,2",True,6
95," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,7
96," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,8
97," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,9
98," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,10
99," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,11
100," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,12
101," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,13
102," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,14
103," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,15
104," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,16
105," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,17
106," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,18
107," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,19
108," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,20
109," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,21
110," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,22
111," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,23
112," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,24
113," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,25
114," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,26
115," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,27
116," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,28
117," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,29
118," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,30
119," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,31
120," Then, you subtract the whole part from the original number to get the fractional part.

",True,7,"5,2",True,32
121," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,33
122," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,34
123," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,35
124," Then, subtracting the whole part from the original number gives us the fractional part.

",True,7,"5,2",True,36
125," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,37
126," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,38
127," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,39
128," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,40
129," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,41
130," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,42
131," Then, subtracting the whole part from the original number gives us the fractional part.

",True,7,"5,2",True,43
132," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,44
133," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,45
134," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,46
135," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,47
136," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,48
137," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,49
138," Then, subtracting the whole part from the original number gives you the fractional part.

",True,7,"5,2",True,50
